// üìå Importation des modules n√©cessaires

import { fixupConfigRules, fixupPluginRules } from '@eslint/compat'; // Compatibilit√© avec les anciennes configs ESLint
import { FlatCompat } from '@eslint/eslintrc'; // Gestion des configurations modernes ESLint
import js from '@eslint/js'; // R√®gles de base pour JavaScript
import htmlPlugin from '@html-eslint/eslint-plugin'; // Plugin ESLint pour HTML
import htmlParser from '@html-eslint/parser'; // Parser ESLint pour analyser le code HTML
import _import from 'eslint-plugin-import'; // V√©rification des imports JS
import security from 'eslint-plugin-security'; // V√©rifications de s√©curit√© courantes
import simpleImportSort from 'eslint-plugin-simple-import-sort'; // Tri automatique des imports
import unicorn from 'eslint-plugin-unicorn'; // R√®gles avanc√©es de qualit√© du code
import globals from 'globals'; // D√©finitions des variables globales
import path from 'node:path'; // Gestion des chemins de fichiers
import { fileURLToPath } from 'node:url'; // Conversion des URL en chemins de fichiers
import jsxA11y from 'eslint-plugin-jsx-a11y';

// üìå D√©termination du chemin du fichier en mode ES Module
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// üìå Configuration pour la compatibilit√© avec l'ancien format ESLint
const compat = new FlatCompat({
    baseDirectory: __dirname, // D√©finit le r√©pertoire de base
    recommendedConfig: js.configs.recommended, // Charge la configuration recommand√©e par ESLint
    allConfig: js.configs.all, // Charge toutes les r√®gles ESLint disponibles
});

// üìå Exportation de la configuration ESLint
export default [
    {
        // üìå Liste des fichiers/dossiers √† ignorer pour √©viter les erreurs inutiles
        ignores: [
            '**/*.svg', // Ignore les fichiers SVG
            '**/node_modules/**', // Ignore le dossier des d√©pendances
            'dist/**', // Ignore les fichiers compil√©s
            'coverage/**', // Ignore les rapports de couverture de tests
            'build/**', // Ignore le dossier de build
        ],
    },

    // üìå Configuration principale : Ajout des configurations ESLint essentielles
    ...fixupConfigRules(
        compat.extends(
            'eslint:recommended', // Applique les r√®gles de base d'ESLint
            'plugin:@html-eslint/recommended', // Applique les r√®gles recommand√©es pour le HTML
            'plugin:import/recommended', // V√©rifie les imports JavaScript
            'plugin:security/recommended-legacy', // V√©rifie les failles de s√©curit√© courantes
            'plugin:unicorn/recommended', // Applique les bonnes pratiques avanc√©es
            'plugin:jsx-a11y/recommended', // Ajout du plugin accessibilit√©
            'plugin:prettier/recommended' // Int√©gration avec Prettier pour le formatage du code
        )
    ),

    {
        // üìå D√©finition des plugins utilis√©s dans ESLint
        plugins: {
            '@html-eslint': fixupPluginRules(htmlPlugin), // Plugin pour HTML
            import: fixupPluginRules(_import), // V√©rification des imports JS
            security: fixupPluginRules(security), // Plugin pour la s√©curit√©
            unicorn: fixupPluginRules(unicorn), // Plugin de bonnes pratiques avanc√©es
            'simple-import-sort': simpleImportSort, // Trie automatiquement les imports
            'jsx-a11y': fixupPluginRules(jsxA11y), //  Ajout du plugin accessibilit√© HTML/JS
        },

        // üìå Options pour l'analyse du code
        languageOptions: {
            globals: { ...globals.browser }, // D√©finit les variables globales pour les navigateurs (`window`, `document`, etc.)
            ecmaVersion: 2023, // Utilisation des derni√®res fonctionnalit√©s ECMAScript
            sourceType: 'module', // Indique que le code utilise les modules ES6
        },

        // üìå D√©finition des r√®gles ESLint
        rules: {
            'no-console': 'warn', // ‚ö†Ô∏è Avertit en cas d'utilisation de `console.log()`
            'no-unused-vars': 'warn', // ‚ö†Ô∏è Avertit si une variable est d√©clar√©e mais jamais utilis√©e
            eqeqeq: ['error', 'always'], // ‚ùå Force l'utilisation de `===` au lieu de `==`
            'no-var': 'error', // ‚ùå Interdit l'utilisation de `var`, oblige `let` ou `const`
            'prefer-const': 'error', // ‚ùå Oblige √† utiliser `const` si la variable n'est jamais r√©assign√©e
            'no-magic-numbers': ['warn', { ignore: [0, 1] }], // ‚ö†Ô∏è Avertit si des nombres magiques sont utilis√©s, sauf `0` et `1`
            curly: ['error', 'all'], // ‚ùå Oblige l'utilisation des `{}` dans les structures de contr√¥le (`if`, `for`, etc.)
            'no-undef': 'error', // ‚ùå Interdit l'utilisation de variables non d√©finies

            // üìå Configuration de Prettier pour formater le code automatiquement
            'prettier/prettier': [
                'error',
                {
                    tabWidth: 4, // üõ†Ô∏è D√©finit une indentation de 4 espaces
                    singleQuote: true, // üõ†Ô∏è Utilisation de guillemets simples (`'`) au lieu de doubles (`"`)
                    trailingComma: 'es5', // üõ†Ô∏è Ajoute une virgule finale dans les objets et tableaux si n√©cessaire
                    semi: true, // üõ†Ô∏è Force l'utilisation des `;` √† la fin des lignes
                    bracketSpacing: true, // üõ†Ô∏è Ajoute un espace entre `{` et `}`
                    endOfLine: 'lf', // üõ†Ô∏è Utilisation des fins de ligne `LF` (Unix) au lieu de `CRLF` (Windows)
                    useTabs: false, // üõ†Ô∏è D√©sactive les tabulations, force les espaces
                    printWidth: 200, // Emp√™che les retours √† la ligne forc√©s
  htmlWhitespaceSensitivity: "ignore" // Ignore l'espace dans HTML
                },
            ],
            indent: 'off', // ‚úÖ D√©sactive `indent` pour √©viter les conflits avec Prettier
        },
    },

    {
        // üìå Configuration sp√©cifique aux fichiers HTML
        files: ['**/*.html'], // S'applique uniquement aux fichiers `.html`
        rules: {
            indent: ['error', 4], // ‚úÖ Force une indentation de 4 espaces pour HTML uniquement
            'prettier/prettier': 'off', // D√©sactive Prettier pour le HTML
        },
        plugins: { '@html-eslint': fixupPluginRules(htmlPlugin) }, // Utilisation du plugin HTML
        languageOptions: { parser: htmlParser }, // Analyse HTML avec le parser d√©di√©
    },
];
